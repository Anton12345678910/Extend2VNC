__author__ = 'fco'
import Expand2VNC_UI
from PyQt4 import QtCore, QtGui

class EVUI(Expand2VNC_UI.Ui_MainWindow):
    def __init__(self):
        super(EVUI, self).__init__()

class utils:

    @staticmethod
    def generateVirtualScreen(resolution):
        """This funtion create an virtual screen"""
        import commands

        # Obtain courrent output screen
        command = 'xrandr'
        commandOut= commands.getstatusoutput(command)
        currentScreen  = commandOut[1].split(' connected')[0].split('\n')[-1]

        virtualScreen = 'VirtualScreen'

        # gtf 1024 600 60
        command = 'gtf ' + resolution
        print(command)
        commandOut = commands.getstatusoutput(command)

        Modeline = commandOut[1].split('Modeline ')[1].split('\n')[0]
        ModelineName = Modeline.split(' ')[0]

        # xrandr --newmode "1024x600_60.00"  48.96  1024 1064 1168 1312  600 601 604 622  -HSync +Vsync
        command = 'xrandr --newmode '+ Modeline
        print(command)
        commands.getoutput(command)

        # xrandr --addmode VirtualScreen "1024x600_60.00"
        command = 'xrandr --addmode ' + virtualScreen + ' ' + ModelineName
        print(command)
        commands.getoutput(command)

        # xrandr --output VirtualScreen --mode "1024x600_60.00" --left-of VGA1
        command = 'xrandr --output ' + virtualScreen + ' --mode ' + ModelineName + ' --left-of ' + currentScreen
        print(command)
        commands.getoutput(command)

    @staticmethod
    def closeVirtualScreen():
        """This funtion close an virtual screen"""
        import commands

        #xrandr --output VirtualScreen --off
        command = 'xrandr --output VirtualScreen
 --off'
        print(command)
        commands.getoutput(command)



# if __name__ == "__main__":
#      import sys
#      app = QtGui.QApplication(sys.argv)
#      MainWindow = QtGui.QMainWindow()
#      ui = EVUI()
#      ui.setupUi(MainWindow)
#      MainWindow.show()
#      sys.exit(app.exec_())
#utils.generateVirtualScreen("1024 600 60")
utils.closeVirtualScreen()
